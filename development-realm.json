{
  "id" : "5861e082-86c3-4c1f-b730-97719d09f4da",
  "realm" : "hapi-fhir-dev",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "bruteForceStrategy" : "MULTIPLE",
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "94b3a8d4-eeaf-468a-b177-c723063ca84a",
      "name" : "default-roles-hapi-fhir-dev",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "5861e082-86c3-4c1f-b730-97719d09f4da",
      "attributes" : { }
    }, {
      "id" : "55498c5a-ed26-48ad-821f-b49b2bc2499b",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "5861e082-86c3-4c1f-b730-97719d09f4da",
      "attributes" : { }
    }, {
      "id" : "c6cd03c2-571a-4aae-b31c-b562e53c3f06",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "5861e082-86c3-4c1f-b730-97719d09f4da",
      "attributes" : { }
    } ],
    "client" : {
      "oauth2-proxy" : [ {
        "id" : "5ad00123-d7bc-4b44-8a38-a9322d5ed963",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "38ca69e4-14e5-4f40-9ece-5e1dc7c46f69",
        "attributes" : { }
      } ],
      "fhir-rest" : [ {
        "id" : "b029281d-64f4-4bfb-9677-c40f6fa036c6",
        "name" : "uma_protection",
        "description" : "",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a6e19ec2-5fa0-4c97-81a9-44ee98bdaff9",
        "attributes" : { }
      } ],
      "realm-management" : [ {
        "id" : "b1217447-ee07-4adc-9a99-e5a274b25d3d",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "caf8e124-7103-4ff5-8891-75114f6306c4",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "43772be6-864d-493f-80f4-5bb2090f99f7",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "edb23fb1-1fd5-4601-95b0-7994b685da4d",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "3a71cd1e-bd4b-48b4-ae80-e2952b2a8df4",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "f42f62b0-0876-4f13-8d45-b9805ee40866",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "9fb43960-382c-468f-9d46-c4145f8482b1",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-realms", "view-clients", "query-clients", "view-authorization", "view-realm", "manage-clients", "view-events", "manage-authorization", "create-client", "view-identity-providers", "impersonation", "view-users", "query-users", "manage-events", "manage-identity-providers", "manage-users", "manage-realm", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "3817697f-dd16-4858-a8dc-e3502ac650f0",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "49567c36-885b-4be8-897d-31dd4e761cf2",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "fb2e332f-f2b9-43ba-92b3-26f634265c53",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "6427243e-c2eb-4e28-8c9c-52dee7bd3a52",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "0d0189d0-f1d0-4e8f-8507-8dbb7cae4214",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "f9084a0e-6b36-4f4b-8e87-8b443ce6aaf6",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "a04f3662-838f-4f79-a35d-86010e88252e",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "41beae2e-5103-40b6-a632-0e2f4722c770",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "bdf08eb1-bfce-4fd3-9a5f-5e253595b54a",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "f2fd57c4-626d-49c7-b273-a1ce7387ab39",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "0cf176e4-5a14-4d82-af53-218a9460659b",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      }, {
        "id" : "171d6036-af00-4be5-b903-a7d125180fa0",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "c9e50200-1eac-44d0-9d7b-89dfcc92cdc8",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "09b4795d-07e7-4fd4-ad89-9391ba8a212e",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "591450ff-6ff1-4f35-9b1e-8087f7557b1c",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "186ad956-cd3f-4431-8be5-c55804acc310",
        "attributes" : { }
      }, {
        "id" : "1d6f9edf-d51b-4317-ab53-d69a5ba41539",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "186ad956-cd3f-4431-8be5-c55804acc310",
        "attributes" : { }
      }, {
        "id" : "eabda0a5-4c97-4b67-8c3b-3098e00db2e4",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "186ad956-cd3f-4431-8be5-c55804acc310",
        "attributes" : { }
      }, {
        "id" : "a20177c9-aba0-447c-a645-02a74d9b6940",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "186ad956-cd3f-4431-8be5-c55804acc310",
        "attributes" : { }
      }, {
        "id" : "8a72b628-9e94-4bac-929b-e27a13562ff1",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "186ad956-cd3f-4431-8be5-c55804acc310",
        "attributes" : { }
      }, {
        "id" : "ab641201-c41d-47a2-bb07-160ab09851c3",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "186ad956-cd3f-4431-8be5-c55804acc310",
        "attributes" : { }
      }, {
        "id" : "4075ede2-7e58-448b-b63e-f37a4ae1b1da",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "186ad956-cd3f-4431-8be5-c55804acc310",
        "attributes" : { }
      }, {
        "id" : "dd8d8cf2-3e35-4642-b7d5-668fc00c5795",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "186ad956-cd3f-4431-8be5-c55804acc310",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "94b3a8d4-eeaf-468a-b177-c723063ca84a",
    "name" : "default-roles-hapi-fhir-dev",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "5861e082-86c3-4c1f-b730-97719d09f4da"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "d716d546-3b2c-478b-bb0b-ef4e76e2d76d",
    "username" : "grune",
    "firstName" : "Guido",
    "lastName" : "Grune",
    "email" : "g.grune@datainmotion.com",
    "emailVerified" : true,
    "createdTimestamp" : 1746013289539,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "fdf0b4cf-02e4-4d0d-8a7e-693acf5c984a",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1746013301962,
      "secretData" : "{\"value\":\"kcg4S2zBhNOZEWNuWpTv0TJk/9rOqasPidZK3/Gvm/E=\",\"salt\":\"L8rm6G9AXBKid5/rGNHOSQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-hapi-fhir-dev" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "8d56dc7b-5edd-4af4-9050-01855bdf5790",
    "username" : "mark",
    "firstName" : "Mark",
    "lastName" : "Hoffmann",
    "email" : "m.hoffmann@datainmotion.com",
    "emailVerified" : true,
    "createdTimestamp" : 1746013326861,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "1bb03e45-7b58-4417-874d-2ec4d9180ed5",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1746013336937,
      "secretData" : "{\"value\":\"hRjU0lF0hw5GOtrudzPlKOJ4CJFKRo8GDlBCjHrCY3k=\",\"salt\":\"u2N2uTbBiyKn1J7Pj0sZDQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ "UPDATE_PASSWORD" ],
    "realmRoles" : [ "default-roles-hapi-fhir-dev" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "841f024e-3208-45ed-b562-5e433cdf8ec3",
    "username" : "service-account-fhir-rest",
    "emailVerified" : false,
    "createdTimestamp" : 1745941619616,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "fhir-rest",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-hapi-fhir-dev" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "da4f0912-1cd9-432d-9c9d-a55db11093de",
    "username" : "service-account-oauth2-proxy",
    "emailVerified" : false,
    "createdTimestamp" : 1736896453746,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "oauth2-proxy",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-hapi-fhir-dev" ],
    "clientRoles" : {
      "oauth2-proxy" : [ "uma_protection" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "186ad956-cd3f-4431-8be5-c55804acc310",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/hapi-fhir-dev/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/hapi-fhir-dev/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "2031428e-aa23-4737-a286-8f4ea56d9c64",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/hapi-fhir-dev/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/hapi-fhir-dev/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "7f74ae7b-f034-461b-885f-91c91d38b02a",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "63455753-d0bc-4d23-8321-39406aa38c8c",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "09b4795d-07e7-4fd4-ad89-9391ba8a212e",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a6e19ec2-5fa0-4c97-81a9-44ee98bdaff9",
    "clientId" : "fhir-rest",
    "name" : "",
    "description" : "",
    "rootUrl" : "http://hapi-fhir.wecare.localhost",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "uzOr2tn7wMaza8Qp00A7c3f9SxvmLfsx",
    "redirectUris" : [ "https://hapi-fhir.wecare.localhost/oauth2/callback" ],
    "webOrigins" : [ "" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1746013182",
      "backchannel.logout.session.required" : "true",
      "frontchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "use.jwks.url" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "61bbb607-701d-4020-9de4-2029b0558d62",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "068e684c-f8e3-41df-98ba-a42d74da7260",
      "name" : "aud-mapper-fhir-rest",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "fhir-rest",
        "id.token.claim" : "true",
        "lightweight.claim" : "false",
        "introspection.token.claim" : "false",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "service_account", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "patient/AllergyIntolerance.read", "microprofile-jwt" ]
  }, {
    "id" : "38ca69e4-14e5-4f40-9ece-5e1dc7c46f69",
    "clientId" : "oauth2-proxy",
    "name" : "OAuth2 Proxy",
    "description" : "",
    "rootUrl" : "https://hapi-fhir.wecare.localhost",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "Gpr1tYciDyCDb3FKciiUie0WRJjRm2Fp",
    "redirectUris" : [ "https://hapi-fhir.wecare.localhost/oauth2/callback" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : true,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1746013204",
      "backchannel.logout.session.required" : "true",
      "login_theme" : "wecare",
      "frontchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "2678f3dd-1d23-4804-8aea-c0bb45b200c0",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "aff364cc-3919-47e4-8ac6-847a15edfed1",
      "name" : "aud-mapper-oauth2-proxy",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "oauth2-proxy",
        "id.token.claim" : "true",
        "lightweight.claim" : "false",
        "introspection.token.claim" : "false",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "017bdaa6-86dd-4212-8bbf-164383293071",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "259fb508-eade-4425-ae31-a7c5845ca925",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "service_account", "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "system/Patient.read", "phone", "organization", "offline_access", "patient/AllergyIntolerance.read", "microprofile-jwt" ]
  }, {
    "id" : "d134aaea-8198-4e8a-955f-65d99917c7e8",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "6f11bc6f-98c4-4f2b-8c6f-3211b6fc77aa",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/hapi-fhir-dev/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/hapi-fhir-dev/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "813ca8a1-b026-4b6e-8241-b288ccd2f15e",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "6a33b186-b22c-40e3-9036-019c75caf26b",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c697c773-25ea-429f-b53f-1bc5c3aa8e27",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "7c3d573c-1550-4184-8b46-bbce74b127ce",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "99bbf37c-c4a9-4a40-ac1e-5ba2f1aa7937",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "98e902ab-d74f-43b0-a71b-9b007cffa064",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ec637e36-f59f-4a55-86e2-81c4b72f4799",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "dc16706a-0de4-4cda-a81b-b583e45e9aa8",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "278daf98-6a07-4f0b-a3ce-f9939c52559a",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "77f158a4-22ee-47e3-b165-631a2e8d22ad",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cb303f61-d4ec-4cac-8d3b-16d9c3c3713d",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3bd3c80f-8d4b-40ff-8287-254fa3152648",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "71e66083-0b37-42f3-9eb6-1faf8c403aad",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0cf4093a-944f-48f2-bf4f-a5e8b245731d",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a3337924-79b3-4b37-8e96-9f4297cff4f4",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "ca7dcef7-4e3a-4acd-8042-1ac1d9c7bf02",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c7a4a6d0-f4a9-4b69-b4da-b0ae28bd6ee4",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "53b3f73a-1d44-4929-93e2-7fd0f4dcdf42",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4afc05a2-43cf-40ba-a134-960a2b0aebb7",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "be4ebd63-bdb3-435c-af4a-1fccbb7c8488",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "ad60cdf3-d7bf-40c9-a3a8-bb36d75a3799",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "255181a2-1075-4a36-aac3-757890778eab",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "c1ad8616-cf26-41b5-bf5d-e02fe9d3bfab",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "e7d454d8-73b7-48d5-ae3a-d40787d58ef4",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "e2ccff50-0d13-4602-b1bb-0b65a14b8b15",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "d7ea9b22-5acc-4135-9cae-a63b6f22d60a",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "427f0071-c902-43a3-a7b3-b69ff760dce5",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "16da8f1e-c11c-4b8c-98b7-638a8c8d4767",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "786a2b0a-9b08-4915-88b1-7f3082ea9e41",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "5ac29ba7-a92b-43b3-803b-d45dabee333a",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "a194ba14-e260-4731-9cfa-528c5580ec50",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "11e57b02-793c-492f-9b9e-4de85c2c8fb7",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "38784840-5e5d-42dd-bfa1-3426f5154512",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "1e362b02-8c72-4905-99e6-e52847f8b271",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "551dddce-8b49-4de9-aa03-1c7a6596addf",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "e08ff945-8ede-46fc-b594-6eda474a1615",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "6d98ab75-eb74-47b5-8446-69e56c8248ed",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "d365fad6-9b1a-4ff3-b758-11373e378efe",
    "name" : "system/Patient.read",
    "description" : "Permission to read all patient records accessible to the given client using its own credentials.",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false",
      "gui.order" : "",
      "consent.screen.text" : "View patient information"
    }
  }, {
    "id" : "5301f92a-ca1b-4747-a698-02eca94fad00",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "d2480910-6eb1-43ae-86c1-3bf4dabe45cd",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "a602f4db-09ff-4f2a-a1ea-271511f28944",
    "name" : "service_account",
    "description" : "Specific scope for a client enabled for service accounts",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "5ff9967f-a557-4ce6-83db-95c96182e7c9",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "da0bbd91-0eac-47bb-844e-3db7c95d35b1",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "bb2c4f1b-4d4d-4ad2-98a3-560ddf3246c3",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "c161f2d5-05f9-4dd8-aa48-9d75cb8c30d7",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "d2230db3-3864-4249-bd66-f97f2269f9ea",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "fd0a5098-7b1a-452a-8020-dd09e5247160",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "b52de3eb-5c3c-48b7-bc5c-a001f7b19845",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "f98fb74c-2f67-4142-95ac-b76371a8f9a5",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "64f45085-dcdd-49b8-afe7-b18feefcc599",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "e162a826-b8ca-48b3-91be-c28777614394",
    "name" : "patient/AllergyIntolerance.read",
    "description" : "Permission to read clinical statements about adverse reactions to substances/products for a specific patient.",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "gui.order" : "",
      "consent.screen.text" : "View allergy information"
    }
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization", "patient/AllergyIntolerance.read" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "loginTheme" : "wecare",
  "accountTheme" : "",
  "adminTheme" : "",
  "emailTheme" : "",
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "be83c4bf-ff4e-4a0e-8ea9-b04b57eef302",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "1b39b6e9-6705-4728-bd31-75bbd67ff183",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "85250a75-e2e9-4fc0-a066-004072f41fd4",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "608df24d-1022-4619-965d-1c4e5b06f447",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-address-mapper", "oidc-full-name-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper" ]
      }
    }, {
      "id" : "c00eca02-8ce1-424f-9bd8-12dca08eec5a",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "61777ded-1561-4513-921f-799479d32c26",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "52b702da-7617-437c-9d60-79b6bd0d5005",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "0219ec66-9336-4cfd-80c1-c479d71cb52d",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "oidc-usermodel-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "saml-user-property-mapper", "oidc-full-name-mapper", "oidc-address-mapper", "saml-user-attribute-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "e29e596f-626c-4b56-90c5-e593530c8c59",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "c92eb2d5-a094-4421-b88c-f9f2c2d05cd6" ],
        "secret" : [ "3NvcIHb61jd2RN7J4kBBuA" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "f8fddb88-f9af-49e8-bfea-7969f4a970a8",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEoQIBAAKCAQEA0+9hapRuqECNGVwkyvA0wy0TXWD/78nxaIgNTdoQAGumSeHUB2s8F8g7L9KfuGOgS2XZYFCdrN5QjPas79o6omrD2HRDFEyEx3yCI5Ky3Ff3b2YtR9PP29wKBFfKyX0lrWPPqwpH5C3IHBAICb6lD8bSveCAvf73tCmNQRpad43qU1EljTvHSdCPQKz5rlqClIkOQuceLE/e4dZeP3x4tRPiNcW24sLr8xGsRIeNGMF9hJGDrp+4BI6fr4Yed2cg4xJeLk8HSNk0RnDnuy+5A8KOqXTWazHR5jvioU+r99QyeIQ8khk2Sp5AND5rRIPdsSHOQJyBd0SJ2kKsgpq/mQIDAQABAoH/Ah//V+8nnXgjqaAer5y4HMhU8JaBv5tbruwJY19mhupSkUaWGrif/sKsFAyf7Ye6OMfzHwWE6SnN8weoYIPimUSqkToJgEoAhCzLiwvy4aunTet3kzpJ/KHxvVrAbG3I7LQ2SjYQ9L+s5Ok2GHf93WGCRuPWBC+o0/AornfsBM00rVF85BTa/tJpTeBIeRw03o0arKzDEwJuC6A9kHfQAkz/uKFKOuRT6uhExHbaQ1re8FKTgfQbzEETSC+7mVmpYa3ZzfPr4waGcUqHN7AgGgeoD2SsOMzp5y2EFsPuvAwlJ4airAsdCdmavUlEu4qhJi2u9MabHa3a70hLFmfxAoGBAP4G6HaPaeY3HLj+fXCA8q3ErJonznr7Ci+EQBsGGub141l1DTX/GjoGXAw5BKL3Yi94gF9yQGFiGuTGQE3Ithdw0QKKssnaJRNByUn9Nmh07ays7Q88p41MPxgnHB9rW48vbh9Dgi0MHFJBahLU8iX0i7jHacyXqaUpwTuIlm69AoGBANWUx4s+l7+63nlXqNAJDD+L5XwDEVvJqLtNOLrFweEgcBrIMUXjtEhIpNCvIewxs0DXt1J8If3O1AVhn7K5CHADkf6qTXLI2mLbPzKWq7GTEZbGa227Pic3RPNuH1VKQDNbWLLVjFzD+KJNoaMnDL098YArVD5LDmXKdEn9VaANAoGAda2Nkx7s2BE/5RM/2RZjVcx+iQtXw/D3zvtdFyfE3qmaIJ7w98qtw6OekKr5UuV3PrZ8AbtTx8lC3ChbMa2BbWp96MeH+6pq8njPXs9GnS1NzWhuiVh35iUkNXQouwVo7PPz99e2PlgV5qUXFpI/ewXGlFsM0BKSLEkjkwi7Z6ECgYB3CGUxsJ/IRnBpNjaqQvClleU++UK6Yih8wuvkBAUq3/Y6pun3JpG6W2onuANy7LwXXmIYQYB8QMIfgaoMZF1UeFjskqN5XoF/6OtO2XQ1El8SJeGHlXxtRLtT5ELoOOqQ9M75VFTW+o1ef1+fW0sZSSWIJh3cXd5XUr7+4YbQHQKBgQDwkfa0hiNq0bnlyATO3yzGk7ozVjbo9Ch+I7eS8SJH7caBgK+tLeKpENAT6kAy3uMAplYroXsTeVB1PgLrfJ620YGs1BiJfJuwTwWmEMyE3w08crUIUHpHf9qqmfyaMfv5lYSmDECEszKGpI/WwPsjIOBQ2M5QYiJuMaZHbIgx2g==" ],
        "certificate" : [ "MIICqTCCAZECBgGWhnwp2zANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1oYXBpLWZoaXItZGV2MB4XDTI1MDQzMDExMzUwNloXDTM1MDQzMDExMzY0NlowGDEWMBQGA1UEAwwNaGFwaS1maGlyLWRldjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANPvYWqUbqhAjRlcJMrwNMMtE11g/+/J8WiIDU3aEABrpknh1AdrPBfIOy/Sn7hjoEtl2WBQnazeUIz2rO/aOqJqw9h0QxRMhMd8giOSstxX929mLUfTz9vcCgRXysl9Ja1jz6sKR+QtyBwQCAm+pQ/G0r3ggL3+97QpjUEaWneN6lNRJY07x0nQj0Cs+a5agpSJDkLnHixP3uHWXj98eLUT4jXFtuLC6/MRrESHjRjBfYSRg66fuASOn6+GHndnIOMSXi5PB0jZNEZw57svuQPCjql01msx0eY74qFPq/fUMniEPJIZNkqeQDQ+a0SD3bEhzkCcgXdEidpCrIKav5kCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAFWIS2aI8e1YUa89NOunNE3vpeXD+Age7TdK57rgKXN3wPSbFAruERCnok6+LdQJBHzLYpzqidtujeSS+j0sa+UyZcnV1gxp/jHLQKJnQdcYkjWGvrYGE1bVFQ9gxc8bt/xaR6pmvKsBtiIGJ27MP9+4ibTYGdoxKcSVa60xeuil1qZlO9N+qB9e9DMDCeSZgzdpZ1o4bXQF3wB8BwOx3dlaRf7CLbjeVh8dKurhDjKNy5CqPt6AO4R4oAEe35qSnUrkbliZu7k1vpdHNCRXslz7H79FvCJdKYsvD/6Ca9GxG9AmXXwueGDP9UVWW2P+zSYs6xIt9VHuKDSQE93UgeQ==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "d189e1ad-3df6-44bf-b7f4-b564548453b5",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAtuQPOP+IfKiJlc40jC2wOMQnCO488pBsfftBCiPL8zeIoqkgIPqDQS5G1mHcC8QLeqG2KaBco4OHC5kc7nw++Y5Ty+sNecoR1mKk7+ZAPtzF6sahQnBfFASt8ACCrOf13sZGH3UOOktYR9E5w02L75G148zRjTR2FEyTJ4uvHmqKI1pf+oy2WBGg2K5aET30gEeFMfcEoxc30rV8tbRZVIMP14zmKDMnq40WNZg6kUvR8XlxoroXeVRbGwNsmhcgqbOdy+YMJFpLtsJgVwSQDQlyx6xxNEadBeoLQ2mZd85PPj4Vc265SF2xDLgdvGEhZYdVkr9dThYc9sv4lEpXUwIDAQABAoIBAAlH4L82Cw61sr2nsszw6JdeL34+21g9HJ72qAyZV8PQ1p3X0pSPLH1F7ub5ck7P36aVHDGtPJDjn2+8O6vydsj31agXFnOkCGxbockMDciNhXxDdh1xUbHUsaA94Q5gev6XYH7qKWhV4yCfLRI3Fi8jCBrg4uVf0Hoj5KJww9iEM37SloyfxSe8mPGIzQVbiU1Vzee9Hih2ZIICUnpPvPbdLV7pz2K6nIEuJ4i7TrthL2BIYyiKVsPk96ZmBdQbDCyCYUurZ7S3g/un0G8iK1odB1whavV7yGdx9b+IFtX8rhthHvCsTJesqHm7S1Y3HxdEqtYkk4wzRhSuyfx9rQECgYEA6okBVdO9L1wb1CMX76XwdraCyhZuYoKe4Baik3UPmAGNUyzcp+iSjNu7S+UJItNHA3MtVIJ0Azcl8J8w7Rxys/TXjWYOOc75KpeoQuDSypg1wchoTaAidYdBPImzK0kvsQ0fq8TxAIpOk62kEIi6v+RYlLmIRWxUkVUb5hxUxNMCgYEAx6EQZWD0fkW/tZsnHY7mcf6x4PA+xNmibQAvnJyQLlqsIPyNbTBPJSFDBRUlFdeHvNrxz7fn6aWHJ3xInVkWdRr9vmNGR8qFfFN82BVwaz4/HWt8wvRUwtexno0hOHjPuNjVkWRYAhPyNg0QbaqEvnaAXdhPnxiuGZSjKlx6k4ECgYEAjbRbryywuKWxVrohYzVilYdufIWTCkgbkA99CRUIZ/JAHkoTxAucSCkXACMRIw5+cJItiEsNp0exz7GPUSQIFbzQY+mOnNT17QsWqdnG4ouWp0/b3VLsnxAqlVYpf/THMPVZ9mGWr5nhIg8e+rJyCzD/aFS1BiUO74R5x83EVesCgYBHG2frtI1iLRYMaieUr8IF+OMDbI/vLlZc3SQYdOwmlsWZOlxl+D84ypBEzzNWhF8lNhfMFYXWA9AQkISNB56oN+UKW/I8wDasAlEF5x0UFigFIrRd/Qn0HUB3aW3b36yd+x6Xm1Z95vzvo9emOIbwEOXIh7RUx0W8duVnwWkoAQKBgEhB/2i+v2LE1YEEGap/wxN2SgabnkhNvmLhq36Nw0Sr2+yFYqyfW9487PQ8HEklCvhFW4HHp09SmPXkmpgmrRVWmiZ+ARhG9eZ0H1WE1C537yXfI9tt9K3p61XrnnR7MDwDWhvD4DYgAtwkJT1yWankNcCTbasRh0Peo0sr+ReG" ],
        "certificate" : [ "MIICqTCCAZECBgGWhnwq+zANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1oYXBpLWZoaXItZGV2MB4XDTI1MDQzMDExMzUwNloXDTM1MDQzMDExMzY0NlowGDEWMBQGA1UEAwwNaGFwaS1maGlyLWRldjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALbkDzj/iHyoiZXONIwtsDjEJwjuPPKQbH37QQojy/M3iKKpICD6g0EuRtZh3AvEC3qhtimgXKODhwuZHO58PvmOU8vrDXnKEdZipO/mQD7cxerGoUJwXxQErfAAgqzn9d7GRh91DjpLWEfROcNNi++RtePM0Y00dhRMkyeLrx5qiiNaX/qMtlgRoNiuWhE99IBHhTH3BKMXN9K1fLW0WVSDD9eM5igzJ6uNFjWYOpFL0fF5caK6F3lUWxsDbJoXIKmzncvmDCRaS7bCYFcEkA0JcsescTRGnQXqC0NpmXfOTz4+FXNuuUhdsQy4HbxhIWWHVZK/XU4WHPbL+JRKV1MCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAia3iJ/BS3NYzk/x/RJPWyt+03N4AH7exSx+Q6n5fvQ6eX/MsKhv97AqIpu+9I0omxyHrYWNFNlMCK55/vCPGigFrgUsYAwzfDLuUYnxh1SCCjFuq/yoKDFqU93ST0SMdW1BV2x5kue3W0vvmVV01H84gmFU4Zedf2cfE7M6vHBUOoEbD+rSFcL9L9Z8NO6hOzwCfa0EwcEx/6PWB8yysy+Ro7wHLpv9j7klwOn5NKK6wy+qQt53m6P8aZKxijFvs6oEdGl7p8mWXPYki1kqsNhOpQ/8lxelwEnHrGN+fWISJKYP7GlUIW6fCih/QQXaRDSiU/BhdjywJUpbmTPDJqw==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "0b0d731f-cd13-43d1-b111-c4a56664a399",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "55ee35ef-a601-41b9-b220-cc3e41a00662" ],
        "secret" : [ "YwCSbiT6nbqwkYJPzdNxqbP_PYWMid-xOLQLpeVNLBoVtzJa8I6nQTbQjOkKDGeCYGmop4pZlhJ9XJwnmpR_x--go3OL8y8v9yPxuE4uORhdAhDpZWe4-9-dGaTHafvfmKrSWFeBhkAGYBC3eGM2_Okzxu-zuH5ctajJE0gabO8" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "6d337cf8-6cf5-455d-870b-a3a99940a498",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "75dc26c3-749c-47db-8194-31bcc9d88eee",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1ad11e7d-acc7-41c8-a859-b161223ff0a9",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1101285e-d22a-4884-aa83-e69889d834e9",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1118d2e4-078d-4edf-9f7d-7b041f29e70d",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6c5d08cc-2430-49ed-a73d-0b3ef12bca05",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c28805a9-9cb7-4897-b13a-ad415dd29b41",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bd256d4a-226f-4b4f-bcc1-2ed6c7461126",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "77dc0046-b70e-48ff-95a8-42efe66bcb42",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a19761ec-f2dd-4ec9-bb2d-6a99107d1de0",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ce0eeeb7-3185-4ef9-972d-f18fb111b7aa",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2e58b843-6840-406c-b8f1-6feddaf7cc4e",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "25e3740a-808a-47d2-a28f-f5e30efa5390",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5bebb03b-8323-481e-ab5f-555bee21dc81",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4b9565a6-1bb1-42d9-bb94-d7dfaa7b6387",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "87caf057-37a2-4aac-9b18-fa6af867f794",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 50,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "17b5250d-689c-4033-b232-9975ffd8a02a",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "14717191-f628-4951-8eb0-92d6d5da80ae",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4d456f94-8135-4b26-ad4e-6af8724f81a0",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c4cad105-fe32-4586-9c41-ae60900c1832",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "75954bbd-3ffb-4749-8e6d-6a9fd1cc3ca6",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "c6311a47-8835-4010-91bf-160919a7d180",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "84fa298c-5470-4fcc-9690-1fe6a8ce7c9b",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "darkMode" : "true"
  },
  "keycloakVersion" : "26.1.3",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "verifiableCredentialsEnabled" : false,
  "adminPermissionsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}