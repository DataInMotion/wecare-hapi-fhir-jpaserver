server {

  server_name fhir.mi-jn.de;
  listen 80;

  # Let's Encrypt ACME challenge location
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  # Health check for certbot readiness
  location /.well-known/acme-challenge/health-check {
    return 200 "nginx ready for ACME challenge";
    add_header Content-Type text/plain;
  }

  # Redirect all other HTTP traffic to HTTPS
  location / {
    return 301 https://$host$request_uri;
  }

}

server {

  server_name fhir.mi-jn.de;
  listen 443 ssl default_server;
  include /etc/nginx/conf/ssl.conf;

  location /private/ {
    auth_request           /oauth2/auth;
    auth_request_set       $auth_status            $upstream_status;
  }

  location /oauth2/ {
    proxy_pass             http://oauth2-proxy:4180;
    proxy_set_header       Host                    $host;
    proxy_set_header       X-Real-IP               $remote_addr;
    proxy_set_header       X-Auth-Request-Redirect $request_uri;
  }

  location = /oauth2/auth {
    internal;

    # Proxy for AuthN server
    proxy_pass              http://oauth2-proxy:4180;

    proxy_pass_request_body off;
    proxy_set_header        Content-Length         "";

    # proxy_set_header      X-Original-URI         $request_uri;
    proxy_set_header        X-Forwarded-Uri        $request_uri;

    proxy_set_header        Host                   $host;
    proxy_set_header        X-Real-IP              $remote_addr;
  }

  # FHIR API endpoints - require authentication (bearer token or session)
  location /fhir/ {
    auth_request /oauth2/auth;
    error_page 401 =403 /oauth2/sign_in;
    
    # If no Authorization header, redirect to login
    if ($http_authorization = "") {
      error_page 401 = /oauth2/start;
    }

    # Pass authenticated user information to FHIR server
    auth_request_set $user   $upstream_http_x_auth_request_user;
    auth_request_set $email  $upstream_http_x_auth_request_email;
    proxy_set_header X-User  $user;
    proxy_set_header X-Email $email;

    # Pass access token for FHIR authorization
    auth_request_set $token  $upstream_http_x_auth_request_access_token;
    proxy_set_header X-Access-Token $token;

    # Cookie handling for session management
    auth_request_set $auth_cookie $upstream_http_set_cookie;
    add_header Set-Cookie $auth_cookie;

    # Standard proxy headers
    proxy_set_header  Host               $host;
    proxy_set_header  X-Real-IP          $remote_addr;
    proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host   $host:443;
    proxy_set_header  X-Forwarded-Server $host;
    proxy_set_header  X-Forwarded-Port   443;
    proxy_set_header  X-Forwarded-Proto  https;

    # Forward to FHIR server
    proxy_pass http://hapi-fhir:80/fhir/;
  }

  # Web interface and other endpoints - require authentication
  location / {
    auth_request /oauth2/auth;
    error_page 401 =403 /oauth2/sign_in;

    # For web interface, redirect to login page
    if ($http_authorization = "") {
      error_page 401 = /oauth2/start;
    }

    # Pass authenticated user information
    auth_request_set $user   $upstream_http_x_auth_request_user;
    auth_request_set $email  $upstream_http_x_auth_request_email;
    proxy_set_header X-User  $user;
    proxy_set_header X-Email $email;

    # Pass access token
    auth_request_set $token  $upstream_http_x_auth_request_access_token;
    proxy_set_header X-Access-Token $token;

    # Cookie handling
    auth_request_set $auth_cookie $upstream_http_set_cookie;
    add_header Set-Cookie $auth_cookie;

    # Handle large cookies
    auth_request_set $auth_cookie_name_upstream_1 $upstream_cookie_auth_cookie_name_1;
    if ($auth_cookie ~* "(; .*)") {
        set $auth_cookie_name_0 $auth_cookie;
        set $auth_cookie_name_1 "auth_cookie_name_1=$auth_cookie_name_upstream_1$1";
    }
    if ($auth_cookie_name_upstream_1) {
        add_header Set-Cookie $auth_cookie_name_0;
        add_header Set-Cookie $auth_cookie_name_1;
    }

    # Standard proxy headers
    proxy_set_header  Host               $host;
    proxy_set_header  X-Real-IP          $remote_addr;
    proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host   $host:443;
    proxy_set_header  X-Forwarded-Server $host;
    proxy_set_header  X-Forwarded-Port   443;
    proxy_set_header  X-Forwarded-Proto  https;

    # Forward to FHIR server
    proxy_pass http://hapi-fhir:80/;
  }

  location = /oauth2/sign_out {
    if ($request_method != POST) {
        return 405;
    }

    # Proxy for AuthN server
    proxy_pass              http://oauth2-proxy:4180;

    proxy_set_header        Host                   $host;
    proxy_set_header        X-Real-IP              $remote_addr;
  }

}

server {

  server_name auth.mi-jn.de;
  listen 80;

  # Let's Encrypt ACME challenge location
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  # Redirect all other HTTP traffic to HTTPS
  location / {
    return 301 https://$host$request_uri;
  }

}

server {

  server_name auth.mi-jn.de;
  listen 443 ssl;
  include /etc/nginx/conf/ssl.conf;

  location /keycloak/ {
    proxy_pass        https://auth.mi-jn.de:8443/;
    proxy_set_header  Host               $host;
    proxy_set_header  X-Real-IP          $remote_addr;
    proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host   $host;
    proxy_set_header  X-Forwarded-Server $host;
    proxy_set_header  X-Forwarded-Port   $server_port;
    proxy_set_header  X-Forwarded-Proto  $scheme;
  }

  location /keycloak/auth/ {
    proxy_pass        https://auth.mi-jn.de:8443/keycloak/auth/;
    proxy_set_header  Host               $host;
    proxy_set_header  X-Real-IP          $remote_addr;
    proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host   $host;
    proxy_set_header  X-Forwarded-Server $host;
    proxy_set_header  X-Forwarded-Port   $server_port;
    proxy_set_header  X-Forwarded-Proto  $scheme;
  }

  location / {
    proxy_pass        https://auth.mi-jn.de:8443/;
    proxy_set_header  Host               $host;
    proxy_set_header  X-Real-IP          $remote_addr;
    proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host   $host:443;
    proxy_set_header  X-Forwarded-Server $host;
    proxy_set_header  X-Forwarded-Port   443;
    proxy_set_header  X-Forwarded-Proto  https;
  }
}

#location / {
#   proxy_set_header  Host               $host;
#   proxy_set_header  X-Real-IP          $remote_addr;
#   proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
#   proxy_set_header  X-Forwarded-Host   $host:443;
#   proxy_set_header  X-Forwarded-Server $host;
#   proxy_set_header  X-Forwarded-Port   443;
#   proxy_set_header  X-Forwarded-Proto  https;
#   proxy_pass        http://hapi-fhir:8080/;
#}

# https://docs.nginx.com/nginx/admin-guide/security-controls/terminating-ssl-http/
# https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-subrequest-authentication
# https://github.com/deskoh/nginx-oauth2-proxy-demo/blob/master/nginx/nginx.conf
# https://oauth2-proxy.github.io/oauth2-proxy/configuration/integration
